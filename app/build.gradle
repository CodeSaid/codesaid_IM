apply plugin: 'com.android.application'

/**
 * Gradle : 构建的三个性能指标
 * -全量编译： 全部编译 - Open Project
 * -代码增量编译：修改了 Java / Kotlin 下面的代码的时候进行编译
 * -资源增量编译： 修改了 res 下面的资源文件的时候编译
 */

android {
    // Debug 模式
    if (rootProject.hasProperty("devBuild")) {
        splits.abi.enable = false
        splits.density.enable = false
        // 禁用 PNG 压缩
        aaptOptions.cruncherEnabled = false
    }
    compileSdkVersion this.rootProject.android.compileSdkVersion
    buildToolsVersion this.rootProject.android.buildToolsVersion

    defaultConfig {
        applicationId this.rootProject.android.applicationId
        minSdkVersion this.rootProject.android.minSdkVersion
        targetSdkVersion this.rootProject.android.targetSdkVersion
        versionCode this.rootProject.android.versionCode
        versionName this.rootProject.android.versionName
        multiDexEnabled this.rootProject.android.multiDexEnabled

        // Debug
        resConfigs("zh", "xxhdpi")
    }
    buildTypes {
        debug {
            // 自定义Gradle常量
            buildConfigField("boolean", "LOG_DEBUG", "true")
            buildConfigField("String", "LOG_TAG", "\"CodeSaid\"")
            buildConfigField("String", "SP_NAME", "\"Config\"")
        }
        release {
            buildConfigField("boolean", "LOG_DEBUG", "false")
            buildConfigField("String", "LOG_TAG", "\"CodeSaid\"")
            buildConfigField("String", "SP_NAME", "\"Config\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation this.rootProject.depsLibs.appcompat
    implementation this.rootProject.depsLibs.constraintlayout

    implementation project(path: ':lib_framework')
}
